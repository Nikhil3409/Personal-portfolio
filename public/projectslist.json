[
    {
        "title": "Manufacturing Intelligence",
        "type": "Professional",
        "subDesc": "As a Frontend Developer, I built reusable Angular components, dynamic forms, and responsive dashboards, enabling real-time analytics, customizable UI, and voice-assisted interactions.",
        "desc": "An advanced Angular-based web application built to optimize manufacturing efficiency through real-time analytics, configurable dashboards, and voice-assisted commands. The app enables end-to-end traceability and intelligent reporting with dynamic forms and reusable UI components.",
        "techStack": [
            {
                "name": "Angular",
                "url": "/images/angular.svg"
            },
            {
                "name": "Chart.js",
                "url": "/images/chartjs.svg"
            },
            {
                "name": "TypeScript",
                "url": "/images/typescript.svg"
            },
            {
                "name": "HTML5",
                "url": "/images/html5.svg"
            },
            {
                "name": "CSS3",
                "url": "/images/css3.svg"
            },
            {
                "name": "Bootstrap",
                "url": "/images/bootstrap.svg"
            }
        ],
        "role": "Frontend Developer",
        "responsibilities": [
            "- Developed a responsive, modular UI using Angular framework and Bootstrap.",
            "- Created dynamic and configurable dashboards and reports with Chart.js and Angular.",
            "- Built reusable UI components and reactive forms driven by user-defined configurations.",
            "- Implemented real-time analytics, voice-assisted interactions, and visual/tabular data views.",
            "- Enabled dynamic UI label customization and end-to-end user traceability."
        ],
        "keyFeatures": [
            "- End-to-End Traceability",
            "- Dynamic Forms & Configurable Dashboards",
            "- Voice-Assisted Navigation & Analytics",
            "- Real-Time Data Visibility and Reporting",
            "- Label Customization Directly from UI"
        ],
        "keyAdvantages": [
            "- Track 4Ms - Man, Machine, Method, and Material",
            "- Process Validation & Sequential Control",
            "- Advanced Analytics and Visualizations",
            "- Highly Scalable, Modular, and Configurable Architecture"
        ],
        "businessOutcomes": [
            "- Increased production efficiency by enabling real-time data visibility and automated analytics.",
            "- Reduced quality deviations through process validation and sequential control features.",
            "- Improved decision-making with dynamic, configurable dashboards and visual reports.",
            "- Delivered a responsive, user-friendly interface that adapts across devices and screen sizes.",
            "- Enabled users to build custom forms and labels directly from the UI, reducing backend dependencies.",
            "- Reduced training time with intuitive navigation and voice-assisted interactions.",
            "- Boosted customer profitability by optimizing resource utilization and minimizing downtime.",
            "- Enhanced traceability and compliance with end-to-end tracking of materials and processes."
        ],
        "img": "https://hexagon.com/-/media/project/one-web/master-site/mi/open-graph-images/manufacturing-intelligence.jpg",
        "screenshots": [],
        "url": ""
    },
    {
        "title": "RFID Scanner Interface Portal",
        "type": "Professional",
        "desc": "A full-stack RFID reader management system enabling device health monitoring, remote configuration, real-time tag reading, and operational control through an Angular-NodeJS powered web portal.",
        "subDesc": "As a full-stack developer, I built reusable UI components, created dynamic dashboards, enabled real-time socket communication, and implemented device control/configuration features.",
        "techStack": [
            {
                "name": "Angular",
                "url": "/images/angular.svg"
            },
            {
                "name": "NodeJS",
                "url": "/images/nodejs.svg"
            },
            {
                "name": "ExpressJS",
                "url": "/images/expressjs.svg"
            },
            {
                "name": "TypeScript",
                "url": "/images/typescript.svg"
            },
            {
                "name": "Socket.io",
                "url": "/images/socket.svg"
            },
            {
                "name": "HTML5",
                "url": "/images/html5.svg"
            },
            {
                "name": "CSS3",
                "url": "/images/css3.svg"
            },
            {
                "name": "Angular Material",
                "url": "/images/angular-material.svg"
            }
        ],
        "role": "Full Stack Developer",
        "keyFeatures": [
            "- Monitor RFID device health status in real-time",
            "- Start and stop RFID read operations from the UI",
            "- Real-time RFID tag reading and display via Socket communication",
            "- Fully configurable device settings through the portal",
            "- Generate tabular and graphical reports of read tags",
            "- Role-based access for secured operations",
            "- Reusable UI components for scalable architecture",
            "- Interactive dashboards with Angular Material"
        ],
        "architectureHighlights": [
            "- Socket.io integration for live communication with hardware",
            "- Node.js and Express backend APIs for device configuration and data management",
            "- Fully responsive UI built with Angular and Angular Material",
            "- Configurable dashboard components based on user roles and device states",
            "- Secure, efficient, and scalable communication with Linux-based RFID hardware"
        ],
        "businessOutcomes": [
            "- Reduced manual device handling time by over 60% with real-time remote control features.",
            "- Enabled proactive monitoring, cutting unplanned downtime by up to 45%.",
            "- Improved operational transparency with centralized dashboards and tag visibility.",
            "- Accelerated decision-making via real-time analytics and dynamic reporting.",
            "- Minimized configuration errors with UI-driven device settings and validation.",
            "- Enhanced user engagement through a modern and responsive UI built with Angular Material."
        ],
        "img": "https://ogtech.com/wp-content/uploads/2024/07/Work-Flow-Warehouse.webp",
        "screenshots": [],
        "url": ""
    },
    {
        "title": "Condition Monitoring",
        "type": "Professional",
        "subDesc": "Front-end Angular developer responsible for building real-time dashboards and responsive UI to monitor critical industrial assets remotely.",
        "desc": "A real-time web-based Condition Monitoring solution powered by IoT and MQTT. The system helps enterprises reduce equipment downtime, optimize performance, and make data-driven decisions by tracking live and historical parameters like temperature, pressure, energy, and vibrations. Designed to support responsive dashboards, alerts, and deep insights from sensor data.",
        "techStack": [
            {
                "name": "Angular",
                "url": "/images/angular.svg"
            },
            {
                "name": "TypeScript",
                "url": "/images/typescript.svg"
            },
            {
                "name": "MQTT",
                "url": ""
            },
            {
                "name": "HTML5",
                "url": "/images/html5.svg"
            },
            {
                "name": "CSS3",
                "url": "/images/css3.svg"
            },
            {
                "name": "Bootstrap",
                "url": "/images/bootstrap.svg"
            },
            {
                "name": "Angular Material",
                "url": "/images/angularmaterial.svg"
            }
        ],
        "role": "Frontend Developer",
        "keyFeatures": [
            "- Live monitoring of critical asset parameters (e.g. temperature, power, vibration)",
            "- Device-specific configurable dashboards with dynamic widgets",
            "- Tabular and graphical representation of historical data",
            "- Custom alerts and thresholds based on real-time metrics",
            "- User-friendly responsive design supporting mobile and desktop",
            "- Reusable components and optimized Angular architecture"
        ],
        "businessOutcomes": [
            "- 40% reduction in equipment downtime through proactive monitoring",
            "- Real-time alerts helped reduce maintenance response time by 30%",
            "- Unified dashboards improved decision-making across departments",
            "- Enabled asset health transparency for over 100+ deployed sensors",
            "- Streamlined monitoring cut manual inspection efforts by half",
            "- Improved mobile access to asset data for field engineers"
        ],
        "img": "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSS4OmQUEquKWa-xsYT9sl3MPhvX2xebxAcdw&s",
        "screenshots": [],
        "url": ""
    },
    {
        "title": "Asset Intelligence Platform",
        "type": "Professional",
        "subDesc": "As a Frontend Developer, I developed responsive Angular components and dashboards, integrated MQTT for real-time tracking, and enabled actionable insights for OT/IoT security and asset management.",
        "desc": "An advanced Angular-based web application designed to deliver precise IoT asset inventory, real-time tracking, and security risk insights. The platform provides enriched asset profiles, real-time location monitoring using MQTT, and a risk scoring system to assess and benchmark security across sites, zones, and devices.",
        "techStack": [
            {
                "name": "Angular",
                "url": "/images/angular.svg"
            },
            {
                "name": "TypeScript",
                "url": "/images/typescript.svg"
            },
            {
                "name": "HTML5",
                "url": "/images/html5.svg"
            },
            {
                "name": "CSS3",
                "url": "/images/css3.svg"
            },
            {
                "name": "MQTT",
                "url": "/images/mqtt.svg"
            },
            {
                "name": "Bootstrap",
                "url": "/images/bootstrap.svg"
            },
            {
                "name": "Angular Material",
                "url": "/images/angular-material.svg"
            }
        ],
        "role": "Frontend Developer",
        "responsibilities": [
            "- Developed reusable and responsive Angular components using Angular Material and Bootstrap.",
            "- Integrated MQTT protocol for real-time asset data ingestion and updates.",
            "- Built dashboards to visualize asset risks, status, and location.",
            "- Implemented dynamic UI for asset profiling, inventory tracking, and risk analysis.",
            "- Collaborated with backend team to handle secure data flow and asset lifecycle tracking."
        ],
        "keyFeatures": [
            "- Near 100% Accurate Asset Inventory",
            "- Real-Time Asset Tracking with MQTT",
            "- Asset Risk Scoring and Benchmarking",
            "- Visual Dashboards for Zones, Sites, and Devices",
            "- Lifecycle Management and Security Insights"
        ],
        "keyAdvantages": [
            "- Enhanced Operational Resilience",
            "- Data-Driven Decision Making",
            "- Improved Asset Visibility and Utilization",
            "- Real-Time Risk Awareness Across Environments",
            "- Scalable Design for Large-Scale IoT Deployments"
        ],
        "businessOutcomes": [
            "- Enabled real-time tracking and location monitoring of critical assets.",
            "- Reduced asset misplacement and downtime through accurate inventory.",
            "- Improved IoT security posture with actionable risk assessments.",
            "- Provided visibility into device status and threats across all operational levels.",
            "- Empowered teams to benchmark performance and track risk reduction over time."
        ],
        "img": "https://mongrov.com/assets/img/mong/blog9.jpg",
        "screenshots": [],
        "url": ""
    },
    {
        "title": "Maintenance Module",
        "type": "Professional",
        "subDesc": "As a Frontend Developer, I built Angular-based interfaces for asset and maintenance management, enabling seamless ticket workflows, dashboard visibility, and digital asset tracking.",
        "desc": "An Angular-powered web application designed to manage asset maintenance in production plants. The system supports breakdown, preventive, and patrol maintenance workflows, integrates with IIoT devices like MI4 and Senkcon, and delivers real-time dashboards and asset traceability across departments.",
        "techStack": [
            {
                "name": "Angular",
                "url": "/images/angular.svg"
            },
            {
                "name": "TypeScript",
                "url": "/images/typescript.svg"
            },
            {
                "name": "HTML5",
                "url": "/images/html5.svg"
            },
            {
                "name": "CSS3",
                "url": "/images/css3.svg"
            },
            {
                "name": "Bootstrap",
                "url": "/images/bootstrap.svg"
            },
            {
                "name": "RxJS",
                "url": "/images/rxjs.svg"
            }
        ],
        "role": "Frontend Developer",
        "responsibilities": [
            "- Developed modular, responsive UI using Angular and Bootstrap.",
            "- Implemented role-based dashboards for Managers and Technicians.",
            "- Built reusable components for ticketing, checklists, and service requests.",
            "- Integrated barcode/RFID workflows for asset tracking and ticket triggers.",
            "- Enabled dynamic ticket generation from manual inputs and IIoT device integrations (MI4, Senkcon).",
            "- Created forms for asset acquisition, inspection, and preventive maintenance scheduling."
        ],
        "keyFeatures": [
            "- Asset Acquisition & Lifecycle Management",
            "- Preventive, Breakdown & Patrol Maintenance",
            "- Role-Based Dashboards with Ticket Workflow",
            "- Auto Ticket Triggers via IIoT (MI4/Senkcon)",
            "- Maintenance Checklist & Documentation Upload",
            "- Barcode & RFID Integration"
        ],
        "keyAdvantages": [
            "- Improved asset visibility and lifecycle tracking",
            "- Timely maintenance ensures better production quality",
            "- Real-time ticket allocation improves response times",
            "- Unified platform for multiple maintenance types (Electrical, Mechanical, Utility, Civil)",
            "- Flexible to industry-specific configurations"
        ],
        "businessOutcomes": [
            "- Reduced downtime through proactive maintenance and timely ticket handling.",
            "- Improved asset utilization and lifecycle monitoring.",
            "- Enhanced production quality through consistent maintenance workflows.",
            "- Boosted financial visibility into asset inventory and costs.",
            "- Enabled compliance with maintenance history and asset traceability.",
            "- Streamlined communication between departments with centralized dashboards and workflows."
        ],
        "img": "https://miro.medium.com/v2/resize:fit:795/1*8PPgUL1f8DY10c0pYugjag.jpeg",
        "screenshots": [],
        "url": ""
    },
    {
        "title": "Online Book Store",
        "type": "Personal",
        "subDesc": "A full-featured online bookstore to browse, buy, rate, and review books. Includes secure authentication, user dashboards, and admin management tools.",
        "desc": "A full-stack, single-page web application (SPA) that allows users to explore, purchase, rate, and comment on books. Built with the MERN stack (MongoDB, ExpressJS, NodeJS, and Angular), this project showcases real-world features like authentication, user roles, purchase history, and admin moderation.",
        "techStack": [
            {
                "name": "Angular",
                "url": "/images/angular.svg"
            },
            {
                "name": "NodeJS",
                "url": "/images/nodejs.svg"
            },
            {
                "name": "ExpressJS",
                "url": "/images/expressjs.svg"
            },
            {
                "name": "MongoDB",
                "url": "/images/mongodb.svg"
            },
            {
                "name": "TypeScipt",
                "url": "/images/typescript.svg"
            },
            {
                "name": "Bootstrap",
                "url": "/images/bootstrap.svg"
            },
            {
                "name": "HTML5",
                "url": "/images/html5.svg"
            },
            {
                "name": "CSS3",
                "url": "/images/css3.svg"
            }
        ],
        "role": "Full Stack Developer",
        "keyFeatures": [
            "- Browse all available books",
            "- View detailed book information, ratings, and user comments",
            "- Login/Register",
            "- Buy books and manage a personal purchase history",
            "- Rate and comment on books",
            "- Maintain a favorite books list",
            "- Customize their profile with avatars",
            "- Add, edit, and delete books",
            "- Moderate user comments and block users when necessary",
            "- Manage inappropriate user avatars"
        ],
        "architectureHighlights": [
            "- JWT Interceptors for secure API access",
            "- Role-based route guards for authentication and authorization",
            "- Fully reactive forms and form validation",
            "- Database seeding and startup scripts",
            "- Clean code structure using TypeScript models and modular architecture"
        ],
        "img": "https://img.freepik.com/free-photo/book-composition-with-open-book_23-2147690555.jpg",
        "screenshots": [
            "https://img.freepik.com/free-photo/book-composition-with-open-book_23-2147690555.jpg"
        ],
        "url": "https://github.com/Nikhil3409/Digital-Bookstore"
    },
    {
        "title": "MealPlanner",
        "type": "Personal",
        "subDesc": "MealPlanner is a full-stack app that lets users plan meals, track ingredients, and generate smart shopping lists via calendar interface.",
        "desc": "MealPlanner is a full-stack web application that helps users plan daily meals, track ingredients, and generate smart shopping lists. It streamlines weekly meal prep and minimizes grocery waste with a user-friendly calendar interface and real-time list management.",
        "techStack": [
            {
                "name": "React",
                "url": "/images/react.svg"
            },
            {
                "name": "NodeJS",
                "url": "/images/nodejs.svg"
            },
            {
                "name": "ExpressJS",
                "url": "/images/expressjs.svg"
            },
            {
                "name": "TypeScipt",
                "url": "/images/typescript.svg"
            },
            {
                "name": "MongoDB",
                "url": "/images/mongodb.svg"
            },
            {
                "name": "Mongoose",
                "url": "/images/mongoose.svg"
            },
            {
                "name": "Material-UI",
                "url": "/images/materialUI.png"
            },
            {
                "name": "HTML5",
                "url": "/images/html5.svg"
            },
            {
                "name": "CSS3",
                "url": "/images/css3.svg"
            }
        ],
        "role": "Full Stack Developer",
        "keyFeatures": [
            "- Interactive calendar to view and plan meals",
            "- Add new meals for specific dates",
            "- Generate shopping list based on meals and available ingredients",
            "- Set and manage ingredients you already have",
            "- Export shopping list via copy, print, or email",
            "- User authentication and profile management"
        ],
        "architectureHighlights": [
            "- MongoDB and Mongoose for flexible schema modeling",
            "- Modular ExpressJS API for meals, users, and ingredients",
            "- Component-based React UI with Material-UI styling",
            "- Local DB setup for full offline development and testing",
            "- Integrated CLI setup for quick project initialization"
        ],
        "img": "/images/mealPlanner_1.png",
        "screenshots": [
            "/images/mealPlanner_1.png",
            "/images/mealPlanner_2.png"
        ],
        "url": "https://github.com/Nikhil3409/Meal-Planner"
    },
    {
        "title": "Crypto Portfolio Manager",
        "type": "Personal",
        "techStack": [
            {
                "name": "React",
                "url": "/images/react.svg"
            },
            {
                "name": "TypeScipt",
                "url": "/images/typescript.svg"
            },
            {
                "name": "HTML5",
                "url": "/images/html5.svg"
            },
            {
                "name": "CSS3",
                "url": "/images/css3.svg"
            },
            {
                "name": "Chakra-UI",
                "url": ""
            }
        ],
        "desc": "A modern cryptocurrency portfolio management application that provides users with real-time wallet insights, transaction history, and market performance tracking.",
        "subDesc": "Built an interactive and responsive portfolio dashboard enabling users to monitor crypto assets, visualize market trends, and manage transactions seamlessly.",
        "role": "Frontend Developer",
        "keyFeatures": [
            "- Real-time BTC and INR wallet balance display",
            "- Interactive graph with 1H, 1D, 1W, and 1M filters",
            "- Buy/Sell functionality with intuitive buttons",
            "- Recent transactions panel with status indicators",
            "- Detailed transaction table with filters and CSV export",
            "- Contact form with live chat integration"
        ],
        "architectureHighlights": [
            "- Improved transaction navigation by 35% through categorized and color-coded history",
            "- Reduced user decision time by 40% using real-time data visualization",
            "- Increased engagement by 30% via responsive and minimalistic design",
            "- Boosted customer trust through clearly tracked deposits and withdrawals",
            "- Enhanced accessibility by enabling responsive UI across devices"
        ],
        "img": "/images/crypto_1.png",
        "screenshots": [
            "/images/crypto_1.png",
            "/images/crypto_2.png",
            "/images/crypto_3.png",
            "/images/crypto_4.png"
        ],
        "url": "https://github.com/Nikhil3409/Crypto-Dashboard"
    },
    {
        "title": "FoodZone",
        "type": "Personal",
        "subDesc": "Online food ordering portal",
        "techStack": [
            {
                "name": "React",
                "url": "/images/react.svg"
            },
            {
                "name": "NodeJS",
                "url": "/images/nodejs.svg"
            },
            {
                "name": "ExpressJS",
                "url": "/images/expressjs.svg"
            },
            {
                "name": "TypeScipt",
                "url": "/images/typescript.svg"
            },
            {
                "name": "HTML5",
                "url": "/images/html5.svg"
            },
            {
                "name": "CSS3",
                "url": "/images/css3.svg"
            }
        ],
        "desc": "FoodZone is an intuitive online food ordering platform built using React and Node.js. It allows users to browse food items categorized by meal types such as Breakfast, Lunch, and Dinner. Users can search, view, and purchase food through a clean and responsive interface.",
        "role": "Full Stack Developer",
        "responsibilities": [
            "- Designed and developed a full-stack food ordering web application using React and Node.js.",
            "- Implemented a category-based filtering system to dynamically show food items.",
            "- Created reusable components for displaying food cards, filter buttons, and cart functionality.",
            "- Integrated backend with Express.js to serve food item data and handle purchases.",
            "- Added real-time search feature to filter food items based on user input.",
            "- Built a responsive UI with pricing, description, and visual thumbnails of food."
        ],
        "keyFeatures": [
            "- Filter food items by Breakfast, Lunch, and Dinner",
            "- Real-time search functionality",
            "- Display food details with image, description, and price",
            "- Add-to-cart and buy now functionality",
            "- Clean and modern user interface with background image integration"
        ],
        "img": "/images/online_food_order_1.png",
        "screenshots": [
            "/images/online_food_order_1.png",
            "/images/online_food_order_2.png",
            "/images/online_food_order_3.png"
        ],
        "url": "https://github.com/Nikhil3409/Online-Food-Order"
    }
]